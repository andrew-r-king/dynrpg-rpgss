Changes between 0.9.0 and 0.8.1
-------------------------------

  * Optimized screen blending.
  * Added setter for Battler.name.
  * Shortened blend mode constants.
  * Added rpg.get[Item,Skill]Name.
  * Added rpg.get[Item,Skill]Description.

Changes between 0.8.1 and 0.8.0
-------------------------------

  * Image:drawText now uses the 'set' blend mode.

Changes between 0.8.0 and 0.7.0
-------------------------------

  * Added onSystemBackgroundDrawn callback.
  * Added keyboard.getVirtualKeyCode.
  * Added keyboard.getState.
  * Added mouse.getState.
  * Mouse position is now clipped to screen dimensions.
  * Added Sound.pitch.
  * Renamed Sound.repeat to Sound.loop to avoid collision with Lua's
    "repeat" keyword.
  * Added graphics.newSystemFontImage.
  * Added option to graphics.writeImage to force a particular color as
    the first palette entry in palletized images.
  * Added game.frameRate.
  * Added game.millisPerFrame.
  * Added game.frameCounter.
  * Added game.playTime.
  * Added game.system.graphicFilename.
  * Added game.menu.scene.
  * Added game.menu.allowed.
  * Added game.menu.saveAllowed.
  * Added game.menu.teleportAllowed.
  * Added game.menu.escapeAllowed.
  * Added game.battle.layout.
  * Added game.battle.atbMode.
  * Added game.battle.speed.
  * Added game.map.existsEvent.
  * Added game.map.findEvent (replaces game.map.findEventById and
    game.map.findEventByName).
  * game.map.moveCamera now behaves as expected (positive offsets move toward
    positive infinity, negative offsets move toward negative infinity).
  * Renamed control mode and layer constants for brevity.
  * Added Character:move.
  * Renamed game.music.fadeOut to game.music.fade for consistency.
  * Added a temporary workaround in game.screen.drawq that fixes the issue
    that the TexturedQuad primitive ignores the source rect position.
  * Moved screen drawing code into its own module for reasons of clarity
    and improved maintainability.
  * Anything rendered to the screen is now affected by the screen brightness
    to avoid sticking out during transitions.
  * Added bitmap versions of the system fonts msmincho and msgothic, as well
    as initial versions of the system window skins.
  * The # (length) operation now works on proxies returned by properties
    like game.party, game.map.events, game.battle.enemies, etc.
  * Refactored and restructured existing system scripts for improved
    modularity and maintainability.
  * Added class.lua (allows for solid object-oriented programming in Lua;
    powered by Yonaba's 30log library).
  * Added Cache.lua (allows caching of frequently used resources like images,
    fonts and window skins).
  * Added Timer.lua (keeps track of and provides an interface to query the
    frame/time delta between updates).
  * Added CallbackManager.lua (allows writing encapsulated extensions).
  * Added InputManager.lua (allows listening/reacting to input events).
  * Added AudioManager.lua (allows playback of BGM, BGS, ME and SE).
  * Added GameClock.lua (keeps track of the total play time and optionally
    displays it in the main menu).
  * Added PathFinder.lua (adds powerful and feature-rich pathfinding tools;
    powered by Yonaba's Jumper library).

Changes between 0.7.0 and 0.6.0
-------------------------------

  * Refactored scripts.
  * Added generic boot.lua.
  * Switched to Azura image I/O library.
  * Added option to write palletized images.

Changes between 0.6.0 and 0.5.2
-------------------------------

  * Changed license to the MIT license.
  * Removed unused field in graphics::Image.
  * Made blend mode a function argument instead of a state.
  * Renamed rotation constants to "cw" and "ccw" for consistency.
  * Fixed wrong argument indices in Image:getPixel and Image:setPixel.
  * Vec2::rotateBy now respects that our y-axis goes down and not up.
  * Memory file constructors that take a buffer now behave as expected.
  * Added initial set of assets.
  * Added CHANGELOG.
 
Changes between 0.5.2 and 0.5.1
-------------------------------

  * Fixed wrong argument indices in game.screen.drawPoint.
  * Fixed performance problem in "set" blend mode due to an
    optimization bug in GCC.

Changes between 0.5.1 and 0.5.0
-------------------------------

  * Refactored code.
